container-image-security-scan:
  stage: container-image-scan
  environment:
    name: dev
  image: $DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
    IMAGE: $PROJECT_IMAGE_NAME:$PROJECT_IMAGE_VERSION

  allow_failure: true
  interruptible: true
  timeout: 5m
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  when: on_success
  extends:
    - .only-develop

  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
    - cat $SA_GCR | base64 -d | docker login -u _json_key --password-stdin https://asia.gcr.io

  script:
    - docker pull $IMAGE
    - ./trivy image --format template --template "@contrib/html.tpl" -o report.html --severity MEDIUM,HIGH,CRITICAL $IMAGE
    - ./trivy image --format template --template "@contrib/gitlab.tpl" -o report-js.json --severity MEDIUM,HIGH,CRITICAL $IMAGE

  cache:
    key: $CI_JOB_NAME
    paths:
      - .trivy-cache/

  artifacts:
    name: "$PROJECT_NAME:$PROJECT_IMAGE_VERSION"
    paths:
      - report.html
      - report-js.json
